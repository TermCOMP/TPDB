(declare-sort Loc 0)
(declare-const f1_0_main_Load Loc)
(declare-const f31_0_main_Cmp Loc)
(declare-const f43_0_main_GE Loc)
(declare-const f64_0_test_LE Loc)
(declare-const f78_0_test_LE Loc)
(declare-const f92_0_test_LE Loc)
(declare-const f106_0_test_LE Loc)
(declare-const f120_0_test_LE Loc)
(declare-const f134_0_test_LE Loc)
(declare-const f148_0_test_LE Loc)
(declare-const f162_0_test_LE Loc)
(declare-const f176_0_test_LE Loc)
(declare-const f190_0_test_LE Loc)
(declare-const f204_0_test_LE Loc)
(declare-const f218_0_test_LE Loc)
(declare-const __init Loc)
(assert (distinct f1_0_main_Load f31_0_main_Cmp f43_0_main_GE f64_0_test_LE f78_0_test_LE f92_0_test_LE f106_0_test_LE f120_0_test_LE f134_0_test_LE f148_0_test_LE f162_0_test_LE f176_0_test_LE f190_0_test_LE f204_0_test_LE f218_0_test_LE __init ))

(define-fun cfg_init ( (pc Loc) (src Loc) (rel Bool) ) Bool
  (and (= pc src) rel))

(define-fun cfg_trans2 ( (pc Loc) (src Loc)
                         (pc1 Loc) (dst Loc)
                         (rel Bool) ) Bool
  (and (= pc src) (= pc1 dst) rel))

(define-fun cfg_trans3 ( (pc Loc) (exit Loc)
                         (pc1 Loc) (call Loc)
                         (pc2 Loc) (return Loc)
                         (rel Bool) ) Bool
  (and (= pc exit) (= pc1 call) (= pc2 return) rel))

(define-fun init_main ( (pc Loc) (arg1 Int) (arg2 Int) (arg3 Int) ) Bool
  (cfg_init pc __init true))

(define-fun next_main (
                 (pc Loc) (arg1 Int) (arg2 Int) (arg3 Int)
                 (pc1 Loc) (arg1P Int) (arg2P Int) (arg3P Int)
             ) Bool
  (or
    (cfg_trans2 pc f1_0_main_Load pc1 f31_0_main_Cmp (and (and (> arg1 0) (> arg2 (- 1))) (= arg2 arg1P)))
    (cfg_trans2 pc f31_0_main_Cmp pc1 f43_0_main_GE (and (and (= arg1 arg1P) (= arg1 arg2P)) (= arg1 arg3P)))
    (cfg_trans2 pc f43_0_main_GE pc1 f31_0_main_Cmp (and (and (and (> arg1 0) (> arg2 99)) (= arg2 arg3)) (= (- arg1 1) arg1P)))
    (cfg_trans2 pc f43_0_main_GE pc1 f43_0_main_GE (and (and (and (and (and (> arg2 0) (< arg2 100)) (= arg2 arg3)) (= arg1 arg1P)) (= (+ arg2 1) arg2P)) (= (+ arg2 1) arg3P)))
    (cfg_trans2 pc f43_0_main_GE pc1 f64_0_test_LE (and (and (and (and (and (> arg2 0) (< arg2 100)) (= arg2 arg3)) (= arg2 arg1P)) (= arg2 arg2P)) (= arg2 arg3P)))
    (cfg_trans2 pc f64_0_test_LE pc1 f64_0_test_LE (and (and (and (and (> arg2 0) (= arg2 arg3)) (= arg1 arg1P)) (= (- arg2 1) arg2P)) (= (- arg2 1) arg3P)))
    (cfg_trans2 pc f64_0_test_LE pc1 f78_0_test_LE (and (and (and (and (= 0 arg2) (= 0 arg3)) (= arg1 arg1P)) (= arg1 arg2P)) (= arg1 arg3P)))
    (cfg_trans2 pc f78_0_test_LE pc1 f78_0_test_LE (and (and (and (and (> arg2 0) (= arg2 arg3)) (= arg1 arg1P)) (= (- arg2 1) arg2P)) (= (- arg2 1) arg3P)))
    (cfg_trans2 pc f78_0_test_LE pc1 f92_0_test_LE (and (and (and (and (= 0 arg2) (= 0 arg3)) (= arg1 arg1P)) (= arg1 arg2P)) (= arg1 arg3P)))
    (cfg_trans2 pc f92_0_test_LE pc1 f92_0_test_LE (and (and (and (and (> arg2 0) (= arg2 arg3)) (= arg1 arg1P)) (= (- arg2 1) arg2P)) (= (- arg2 1) arg3P)))
    (cfg_trans2 pc f92_0_test_LE pc1 f106_0_test_LE (and (and (and (and (= 0 arg2) (= 0 arg3)) (= arg1 arg1P)) (= arg1 arg2P)) (= arg1 arg3P)))
    (cfg_trans2 pc f106_0_test_LE pc1 f106_0_test_LE (and (and (and (and (> arg2 0) (= arg2 arg3)) (= arg1 arg1P)) (= (- arg2 1) arg2P)) (= (- arg2 1) arg3P)))
    (cfg_trans2 pc f106_0_test_LE pc1 f120_0_test_LE (and (and (and (and (= 0 arg2) (= 0 arg3)) (= arg1 arg1P)) (= arg1 arg2P)) (= arg1 arg3P)))
    (cfg_trans2 pc f120_0_test_LE pc1 f120_0_test_LE (and (and (and (and (> arg2 0) (= arg2 arg3)) (= arg1 arg1P)) (= (- arg2 1) arg2P)) (= (- arg2 1) arg3P)))
    (cfg_trans2 pc f120_0_test_LE pc1 f134_0_test_LE (and (and (and (and (= 0 arg2) (= 0 arg3)) (= arg1 arg1P)) (= arg1 arg2P)) (= arg1 arg3P)))
    (cfg_trans2 pc f134_0_test_LE pc1 f134_0_test_LE (and (and (and (and (> arg2 0) (= arg2 arg3)) (= arg1 arg1P)) (= (- arg2 1) arg2P)) (= (- arg2 1) arg3P)))
    (cfg_trans2 pc f134_0_test_LE pc1 f148_0_test_LE (and (and (and (and (= 0 arg2) (= 0 arg3)) (= arg1 arg1P)) (= arg1 arg2P)) (= arg1 arg3P)))
    (cfg_trans2 pc f148_0_test_LE pc1 f148_0_test_LE (and (and (and (and (> arg2 0) (= arg2 arg3)) (= arg1 arg1P)) (= (- arg2 1) arg2P)) (= (- arg2 1) arg3P)))
    (cfg_trans2 pc f148_0_test_LE pc1 f162_0_test_LE (and (and (and (and (= 0 arg2) (= 0 arg3)) (= arg1 arg1P)) (= arg1 arg2P)) (= arg1 arg3P)))
    (cfg_trans2 pc f162_0_test_LE pc1 f162_0_test_LE (and (and (and (and (> arg2 0) (= arg2 arg3)) (= arg1 arg1P)) (= (- arg2 1) arg2P)) (= (- arg2 1) arg3P)))
    (cfg_trans2 pc f162_0_test_LE pc1 f176_0_test_LE (and (and (and (and (= 0 arg2) (= 0 arg3)) (= arg1 arg1P)) (= arg1 arg2P)) (= arg1 arg3P)))
    (cfg_trans2 pc f176_0_test_LE pc1 f176_0_test_LE (and (and (and (and (> arg2 0) (= arg2 arg3)) (= arg1 arg1P)) (= (- arg2 1) arg2P)) (= (- arg2 1) arg3P)))
    (cfg_trans2 pc f176_0_test_LE pc1 f190_0_test_LE (and (and (and (and (= 0 arg2) (= 0 arg3)) (= arg1 arg1P)) (= arg1 arg2P)) (= arg1 arg3P)))
    (cfg_trans2 pc f190_0_test_LE pc1 f190_0_test_LE (and (and (and (and (> arg2 0) (= arg2 arg3)) (= arg1 arg1P)) (= (- arg2 1) arg2P)) (= (- arg2 1) arg3P)))
    (cfg_trans2 pc f190_0_test_LE pc1 f204_0_test_LE (and (and (and (and (= 0 arg2) (= 0 arg3)) (= arg1 arg1P)) (= arg1 arg2P)) (= arg1 arg3P)))
    (cfg_trans2 pc f204_0_test_LE pc1 f204_0_test_LE (and (and (and (and (> arg2 0) (= arg2 arg3)) (= arg1 arg1P)) (= (- arg2 1) arg2P)) (= (- arg2 1) arg3P)))
    (cfg_trans2 pc f204_0_test_LE pc1 f218_0_test_LE (and (and (= 0 arg2) (= 0 arg3)) (= arg1 arg1P)))
    (cfg_trans2 pc f218_0_test_LE pc1 f218_0_test_LE (and (> arg1 0) (= (- arg1 1) arg1P)))
    (cfg_trans2 pc __init pc1 f1_0_main_Load true)
  )
)
