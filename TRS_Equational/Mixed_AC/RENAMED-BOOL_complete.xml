<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../../xml/xtcHTML.xsl"?>
<problem xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../xml/xtc.xsd" type="termination">
<trs>
<rules>
<rule>
<lhs>
<funapp>
<name>U101</name>
<arg>
<funapp>
<name>tt</name>
</funapp>
</arg>
<arg>
<var>A</var>
</arg>
<arg>
<var>B</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>_xor_</name>
<arg>
<funapp>
<name>_and_</name>
<arg>
<var>A</var>
</arg>
<arg>
<var>B</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>_xor_</name>
<arg>
<var>A</var>
</arg>
<arg>
<var>B</var>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>U11</name>
<arg>
<funapp>
<name>tt</name>
</funapp>
</arg>
<arg>
<var>A</var>
</arg>
</funapp>
</lhs>
<rhs>
<var>A</var>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>U111</name>
<arg>
<funapp>
<name>tt</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>false</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>U121</name>
<arg>
<funapp>
<name>tt</name>
</funapp>
</arg>
<arg>
<var>A</var>
</arg>
</funapp>
</lhs>
<rhs>
<var>A</var>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>U131</name>
<arg>
<funapp>
<name>tt</name>
</funapp>
</arg>
<arg>
<var>B</var>
</arg>
<arg>
<var>U'</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>U132</name>
<arg>
<funapp>
<name>equal</name>
<arg>
<funapp>
<name>_isNotEqualTo_</name>
<arg>
<var>B</var>
</arg>
<arg>
<funapp>
<name>true</name>
</funapp>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>true</name>
</funapp>
</arg>
</funapp>
</arg>
<arg>
<var>U'</var>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>U132</name>
<arg>
<funapp>
<name>tt</name>
</funapp>
</arg>
<arg>
<var>U'</var>
</arg>
</funapp>
</lhs>
<rhs>
<var>U'</var>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>U141</name>
<arg>
<funapp>
<name>tt</name>
</funapp>
</arg>
<arg>
<var>U</var>
</arg>
</funapp>
</lhs>
<rhs>
<var>U</var>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>U151</name>
<arg>
<funapp>
<name>tt</name>
</funapp>
</arg>
<arg>
<var>V1</var>
</arg>
<arg>
<var>V2</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>U152</name>
<arg>
<funapp>
<name>isBool</name>
<arg>
<var>V1</var>
</arg>
</funapp>
</arg>
<arg>
<var>V2</var>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>U152</name>
<arg>
<funapp>
<name>tt</name>
</funapp>
</arg>
<arg>
<var>V2</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>U153</name>
<arg>
<funapp>
<name>isBool</name>
<arg>
<var>V2</var>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>U153</name>
<arg>
<funapp>
<name>tt</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>tt</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>U161</name>
<arg>
<funapp>
<name>tt</name>
</funapp>
</arg>
<arg>
<var>V1</var>
</arg>
<arg>
<var>V2</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>U162</name>
<arg>
<funapp>
<name>isBool</name>
<arg>
<var>V1</var>
</arg>
</funapp>
</arg>
<arg>
<var>V2</var>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>U162</name>
<arg>
<funapp>
<name>tt</name>
</funapp>
</arg>
<arg>
<var>V2</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>U163</name>
<arg>
<funapp>
<name>isBool</name>
<arg>
<var>V2</var>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>U163</name>
<arg>
<funapp>
<name>tt</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>tt</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>U171</name>
<arg>
<funapp>
<name>tt</name>
</funapp>
</arg>
<arg>
<var>V1</var>
</arg>
<arg>
<var>V2</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>U172</name>
<arg>
<funapp>
<name>isBool</name>
<arg>
<var>V1</var>
</arg>
</funapp>
</arg>
<arg>
<var>V2</var>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>U172</name>
<arg>
<funapp>
<name>tt</name>
</funapp>
</arg>
<arg>
<var>V2</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>U173</name>
<arg>
<funapp>
<name>isBool</name>
<arg>
<var>V2</var>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>U173</name>
<arg>
<funapp>
<name>tt</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>tt</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>U181</name>
<arg>
<funapp>
<name>tt</name>
</funapp>
</arg>
<arg>
<var>V1</var>
</arg>
<arg>
<var>V2</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>U182</name>
<arg>
<funapp>
<name>isBool</name>
<arg>
<var>V1</var>
</arg>
</funapp>
</arg>
<arg>
<var>V2</var>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>U182</name>
<arg>
<funapp>
<name>tt</name>
</funapp>
</arg>
<arg>
<var>V2</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>U183</name>
<arg>
<funapp>
<name>isBool</name>
<arg>
<var>V2</var>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>U183</name>
<arg>
<funapp>
<name>tt</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>tt</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>U191</name>
<arg>
<funapp>
<name>tt</name>
</funapp>
</arg>
<arg>
<var>V1</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>U192</name>
<arg>
<funapp>
<name>isBool</name>
<arg>
<var>V1</var>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>U192</name>
<arg>
<funapp>
<name>tt</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>tt</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>U201</name>
<arg>
<funapp>
<name>tt</name>
</funapp>
</arg>
<arg>
<var>A</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>_xor_</name>
<arg>
<var>A</var>
</arg>
<arg>
<funapp>
<name>true</name>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>U21</name>
<arg>
<funapp>
<name>tt</name>
</funapp>
</arg>
<arg>
<var>A</var>
</arg>
<arg>
<var>B</var>
</arg>
<arg>
<var>C</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>_xor_</name>
<arg>
<funapp>
<name>_and_</name>
<arg>
<var>A</var>
</arg>
<arg>
<var>B</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>_and_</name>
<arg>
<var>A</var>
</arg>
<arg>
<var>C</var>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>U31</name>
<arg>
<funapp>
<name>tt</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>false</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>U41</name>
<arg>
<funapp>
<name>tt</name>
</funapp>
</arg>
<arg>
<var>A</var>
</arg>
</funapp>
</lhs>
<rhs>
<var>A</var>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>U51</name>
<arg>
<funapp>
<name>tt</name>
</funapp>
</arg>
<arg>
<var>A</var>
</arg>
<arg>
<var>B</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>not_</name>
<arg>
<funapp>
<name>_xor_</name>
<arg>
<var>A</var>
</arg>
<arg>
<funapp>
<name>_and_</name>
<arg>
<var>A</var>
</arg>
<arg>
<var>B</var>
</arg>
</funapp>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>U61</name>
<arg>
<funapp>
<name>tt</name>
</funapp>
</arg>
<arg>
<var>U'</var>
</arg>
<arg>
<var>U</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>U62</name>
<arg>
<funapp>
<name>equal</name>
<arg>
<funapp>
<name>_isNotEqualTo_</name>
<arg>
<var>U</var>
</arg>
<arg>
<var>U'</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>true</name>
</funapp>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>U62</name>
<arg>
<funapp>
<name>tt</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>false</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>U71</name>
<arg>
<funapp>
<name>tt</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>true</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>U81</name>
<arg>
<funapp>
<name>tt</name>
</funapp>
</arg>
<arg>
<var>U'</var>
</arg>
<arg>
<var>U</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>if_then_else_fi</name>
<arg>
<funapp>
<name>_isEqualTo_</name>
<arg>
<var>U</var>
</arg>
<arg>
<var>U'</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>false</name>
</funapp>
</arg>
<arg>
<funapp>
<name>true</name>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>U91</name>
<arg>
<funapp>
<name>tt</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>false</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>_and_</name>
<arg>
<var>A</var>
</arg>
<arg>
<var>A</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>U11</name>
<arg>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>isBool</name>
<arg>
<var>A</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>isBoolKind</name>
<arg>
<var>A</var>
</arg>
</funapp>
</arg>
</funapp>
</arg>
<arg>
<var>A</var>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>_and_</name>
<arg>
<var>A</var>
</arg>
<arg>
<funapp>
<name>_xor_</name>
<arg>
<var>B</var>
</arg>
<arg>
<var>C</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>U21</name>
<arg>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>isBool</name>
<arg>
<var>A</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>isBoolKind</name>
<arg>
<var>A</var>
</arg>
</funapp>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>isBool</name>
<arg>
<var>B</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>isBoolKind</name>
<arg>
<var>B</var>
</arg>
</funapp>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>isBool</name>
<arg>
<var>C</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>isBoolKind</name>
<arg>
<var>C</var>
</arg>
</funapp>
</arg>
</funapp>
</arg>
</funapp>
</arg>
</funapp>
</arg>
<arg>
<var>A</var>
</arg>
<arg>
<var>B</var>
</arg>
<arg>
<var>C</var>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>_and_</name>
<arg>
<funapp>
<name>false</name>
</funapp>
</arg>
<arg>
<var>A</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>U31</name>
<arg>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>isBool</name>
<arg>
<var>A</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>isBoolKind</name>
<arg>
<var>A</var>
</arg>
</funapp>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>_and_</name>
<arg>
<funapp>
<name>true</name>
</funapp>
</arg>
<arg>
<var>A</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>U41</name>
<arg>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>isBool</name>
<arg>
<var>A</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>isBoolKind</name>
<arg>
<var>A</var>
</arg>
</funapp>
</arg>
</funapp>
</arg>
<arg>
<var>A</var>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>_implies_</name>
<arg>
<var>A</var>
</arg>
<arg>
<var>B</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>U51</name>
<arg>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>isBool</name>
<arg>
<var>A</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>isBoolKind</name>
<arg>
<var>A</var>
</arg>
</funapp>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>isBool</name>
<arg>
<var>B</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>isBoolKind</name>
<arg>
<var>B</var>
</arg>
</funapp>
</arg>
</funapp>
</arg>
</funapp>
</arg>
<arg>
<var>A</var>
</arg>
<arg>
<var>B</var>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>_isEqualTo_</name>
<arg>
<var>U</var>
</arg>
<arg>
<var>U'</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>U61</name>
<arg>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>isS</name>
<arg>
<var>U'</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>isSKind</name>
<arg>
<var>U'</var>
</arg>
</funapp>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>isS</name>
<arg>
<var>U</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>isSKind</name>
<arg>
<var>U</var>
</arg>
</funapp>
</arg>
</funapp>
</arg>
</funapp>
</arg>
<arg>
<var>U'</var>
</arg>
<arg>
<var>U</var>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>_isEqualTo_</name>
<arg>
<var>U</var>
</arg>
<arg>
<var>U</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>U71</name>
<arg>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>isS</name>
<arg>
<var>U</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>isSKind</name>
<arg>
<var>U</var>
</arg>
</funapp>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>_isNotEqualTo_</name>
<arg>
<var>U</var>
</arg>
<arg>
<var>U'</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>U81</name>
<arg>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>isS</name>
<arg>
<var>U'</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>isSKind</name>
<arg>
<var>U'</var>
</arg>
</funapp>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>isS</name>
<arg>
<var>U</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>isSKind</name>
<arg>
<var>U</var>
</arg>
</funapp>
</arg>
</funapp>
</arg>
</funapp>
</arg>
<arg>
<var>U'</var>
</arg>
<arg>
<var>U</var>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>_isNotEqualTo_</name>
<arg>
<var>U</var>
</arg>
<arg>
<var>U</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>U91</name>
<arg>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>isS</name>
<arg>
<var>U</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>isSKind</name>
<arg>
<var>U</var>
</arg>
</funapp>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>_or_</name>
<arg>
<var>A</var>
</arg>
<arg>
<var>B</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>U101</name>
<arg>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>isBool</name>
<arg>
<var>A</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>isBoolKind</name>
<arg>
<var>A</var>
</arg>
</funapp>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>isBool</name>
<arg>
<var>B</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>isBoolKind</name>
<arg>
<var>B</var>
</arg>
</funapp>
</arg>
</funapp>
</arg>
</funapp>
</arg>
<arg>
<var>A</var>
</arg>
<arg>
<var>B</var>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>_xor_</name>
<arg>
<var>A</var>
</arg>
<arg>
<var>A</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>U111</name>
<arg>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>isBool</name>
<arg>
<var>A</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>isBoolKind</name>
<arg>
<var>A</var>
</arg>
</funapp>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>_xor_</name>
<arg>
<funapp>
<name>false</name>
</funapp>
</arg>
<arg>
<var>A</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>U121</name>
<arg>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>isBool</name>
<arg>
<var>A</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>isBoolKind</name>
<arg>
<var>A</var>
</arg>
</funapp>
</arg>
</funapp>
</arg>
<arg>
<var>A</var>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>tt</name>
</funapp>
</arg>
<arg>
<var>X</var>
</arg>
</funapp>
</lhs>
<rhs>
<var>X</var>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>equal</name>
<arg>
<var>X</var>
</arg>
<arg>
<var>X</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>tt</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>if_then_else_fi</name>
<arg>
<var>B</var>
</arg>
<arg>
<var>U</var>
</arg>
<arg>
<var>U'</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>U131</name>
<arg>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>isBool</name>
<arg>
<var>B</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>isBoolKind</name>
<arg>
<var>B</var>
</arg>
</funapp>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>isS</name>
<arg>
<var>U'</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>isSKind</name>
<arg>
<var>U'</var>
</arg>
</funapp>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>isS</name>
<arg>
<var>U</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>isSKind</name>
<arg>
<var>U</var>
</arg>
</funapp>
</arg>
</funapp>
</arg>
</funapp>
</arg>
</funapp>
</arg>
<arg>
<var>B</var>
</arg>
<arg>
<var>U'</var>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>if_then_else_fi</name>
<arg>
<funapp>
<name>true</name>
</funapp>
</arg>
<arg>
<var>U</var>
</arg>
<arg>
<var>U'</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>U141</name>
<arg>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>isS</name>
<arg>
<var>U'</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>isSKind</name>
<arg>
<var>U'</var>
</arg>
</funapp>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>isS</name>
<arg>
<var>U</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>isSKind</name>
<arg>
<var>U</var>
</arg>
</funapp>
</arg>
</funapp>
</arg>
</funapp>
</arg>
<arg>
<var>U</var>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>isBool</name>
<arg>
<funapp>
<name>false</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>tt</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>isBool</name>
<arg>
<funapp>
<name>true</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>tt</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>isBool</name>
<arg>
<funapp>
<name>_and_</name>
<arg>
<var>V1</var>
</arg>
<arg>
<var>V2</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>U151</name>
<arg>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>isBoolKind</name>
<arg>
<var>V1</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>isBoolKind</name>
<arg>
<var>V2</var>
</arg>
</funapp>
</arg>
</funapp>
</arg>
<arg>
<var>V1</var>
</arg>
<arg>
<var>V2</var>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>isBool</name>
<arg>
<funapp>
<name>_implies_</name>
<arg>
<var>V1</var>
</arg>
<arg>
<var>V2</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>U161</name>
<arg>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>isBoolKind</name>
<arg>
<var>V1</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>isBoolKind</name>
<arg>
<var>V2</var>
</arg>
</funapp>
</arg>
</funapp>
</arg>
<arg>
<var>V1</var>
</arg>
<arg>
<var>V2</var>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>isBool</name>
<arg>
<funapp>
<name>_isEqualTo_</name>
<arg>
<var>V1</var>
</arg>
<arg>
<var>V2</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>tt</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>isBool</name>
<arg>
<funapp>
<name>_isNotEqualTo_</name>
<arg>
<var>V1</var>
</arg>
<arg>
<var>V2</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>tt</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>isBool</name>
<arg>
<funapp>
<name>_or_</name>
<arg>
<var>V1</var>
</arg>
<arg>
<var>V2</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>U171</name>
<arg>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>isBoolKind</name>
<arg>
<var>V1</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>isBoolKind</name>
<arg>
<var>V2</var>
</arg>
</funapp>
</arg>
</funapp>
</arg>
<arg>
<var>V1</var>
</arg>
<arg>
<var>V2</var>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>isBool</name>
<arg>
<funapp>
<name>_xor_</name>
<arg>
<var>V1</var>
</arg>
<arg>
<var>V2</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>U181</name>
<arg>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>isBoolKind</name>
<arg>
<var>V1</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>isBoolKind</name>
<arg>
<var>V2</var>
</arg>
</funapp>
</arg>
</funapp>
</arg>
<arg>
<var>V1</var>
</arg>
<arg>
<var>V2</var>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>isBool</name>
<arg>
<funapp>
<name>not_</name>
<arg>
<var>V1</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>U191</name>
<arg>
<funapp>
<name>isBoolKind</name>
<arg>
<var>V1</var>
</arg>
</funapp>
</arg>
<arg>
<var>V1</var>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>isBoolKind</name>
<arg>
<funapp>
<name>false</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>tt</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>isBoolKind</name>
<arg>
<funapp>
<name>true</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>tt</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>isBoolKind</name>
<arg>
<funapp>
<name>_and_</name>
<arg>
<var>V1</var>
</arg>
<arg>
<var>V2</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>isBoolKind</name>
<arg>
<var>V1</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>isBoolKind</name>
<arg>
<var>V2</var>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>isBoolKind</name>
<arg>
<funapp>
<name>_implies_</name>
<arg>
<var>V1</var>
</arg>
<arg>
<var>V2</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>isBoolKind</name>
<arg>
<var>V1</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>isBoolKind</name>
<arg>
<var>V2</var>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>isBoolKind</name>
<arg>
<funapp>
<name>_isEqualTo_</name>
<arg>
<var>V1</var>
</arg>
<arg>
<var>V2</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>tt</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>isBoolKind</name>
<arg>
<funapp>
<name>_isNotEqualTo_</name>
<arg>
<var>V1</var>
</arg>
<arg>
<var>V2</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>tt</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>isBoolKind</name>
<arg>
<funapp>
<name>_or_</name>
<arg>
<var>V1</var>
</arg>
<arg>
<var>V2</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>isBoolKind</name>
<arg>
<var>V1</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>isBoolKind</name>
<arg>
<var>V2</var>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>isBoolKind</name>
<arg>
<funapp>
<name>_xor_</name>
<arg>
<var>V1</var>
</arg>
<arg>
<var>V2</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>isBoolKind</name>
<arg>
<var>V1</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>isBoolKind</name>
<arg>
<var>V2</var>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>isBoolKind</name>
<arg>
<funapp>
<name>not_</name>
<arg>
<var>V1</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>isBoolKind</name>
<arg>
<var>V1</var>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>not_</name>
<arg>
<var>A</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>U201</name>
<arg>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>isBool</name>
<arg>
<var>A</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>isBoolKind</name>
<arg>
<var>A</var>
</arg>
</funapp>
</arg>
</funapp>
</arg>
<arg>
<var>A</var>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>not_</name>
<arg>
<funapp>
<name>false</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>true</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>not_</name>
<arg>
<funapp>
<name>true</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>false</name>
</funapp>
</rhs>
</rule>
</rules>
<signature>
<funcsym>
<name>U101</name>
<arity>3</arity>
</funcsym>
<funcsym>
<name>tt</name>
<arity>0</arity>
</funcsym>
<funcsym>
<name>_xor_</name>
<arity>2</arity>
<theory>AC</theory>
</funcsym>
<funcsym>
<name>_and_</name>
<arity>2</arity>
<theory>AC</theory>
</funcsym>
<funcsym>
<name>U11</name>
<arity>2</arity>
</funcsym>
<funcsym>
<name>U111</name>
<arity>1</arity>
</funcsym>
<funcsym>
<name>false</name>
<arity>0</arity>
</funcsym>
<funcsym>
<name>U121</name>
<arity>2</arity>
</funcsym>
<funcsym>
<name>U131</name>
<arity>3</arity>
</funcsym>
<funcsym>
<name>U132</name>
<arity>2</arity>
</funcsym>
<funcsym>
<name>equal</name>
<arity>2</arity>
</funcsym>
<funcsym>
<name>_isNotEqualTo_</name>
<arity>2</arity>
</funcsym>
<funcsym>
<name>true</name>
<arity>0</arity>
</funcsym>
<funcsym>
<name>U141</name>
<arity>2</arity>
</funcsym>
<funcsym>
<name>U151</name>
<arity>3</arity>
</funcsym>
<funcsym>
<name>U152</name>
<arity>2</arity>
</funcsym>
<funcsym>
<name>isBool</name>
<arity>1</arity>
</funcsym>
<funcsym>
<name>U153</name>
<arity>1</arity>
</funcsym>
<funcsym>
<name>U161</name>
<arity>3</arity>
</funcsym>
<funcsym>
<name>U162</name>
<arity>2</arity>
</funcsym>
<funcsym>
<name>U163</name>
<arity>1</arity>
</funcsym>
<funcsym>
<name>U171</name>
<arity>3</arity>
</funcsym>
<funcsym>
<name>U172</name>
<arity>2</arity>
</funcsym>
<funcsym>
<name>U173</name>
<arity>1</arity>
</funcsym>
<funcsym>
<name>U181</name>
<arity>3</arity>
</funcsym>
<funcsym>
<name>U182</name>
<arity>2</arity>
</funcsym>
<funcsym>
<name>U183</name>
<arity>1</arity>
</funcsym>
<funcsym>
<name>U191</name>
<arity>2</arity>
</funcsym>
<funcsym>
<name>U192</name>
<arity>1</arity>
</funcsym>
<funcsym>
<name>U201</name>
<arity>2</arity>
</funcsym>
<funcsym>
<name>U21</name>
<arity>4</arity>
</funcsym>
<funcsym>
<name>U31</name>
<arity>1</arity>
</funcsym>
<funcsym>
<name>U41</name>
<arity>2</arity>
</funcsym>
<funcsym>
<name>U51</name>
<arity>3</arity>
</funcsym>
<funcsym>
<name>not_</name>
<arity>1</arity>
</funcsym>
<funcsym>
<name>U61</name>
<arity>3</arity>
</funcsym>
<funcsym>
<name>U62</name>
<arity>1</arity>
</funcsym>
<funcsym>
<name>U71</name>
<arity>1</arity>
</funcsym>
<funcsym>
<name>U81</name>
<arity>3</arity>
</funcsym>
<funcsym>
<name>if_then_else_fi</name>
<arity>3</arity>
</funcsym>
<funcsym>
<name>_isEqualTo_</name>
<arity>2</arity>
</funcsym>
<funcsym>
<name>U91</name>
<arity>1</arity>
</funcsym>
<funcsym>
<name>and</name>
<arity>2</arity>
</funcsym>
<funcsym>
<name>isBoolKind</name>
<arity>1</arity>
</funcsym>
<funcsym>
<name>_implies_</name>
<arity>2</arity>
</funcsym>
<funcsym>
<name>isS</name>
<arity>1</arity>
</funcsym>
<funcsym>
<name>isSKind</name>
<arity>1</arity>
</funcsym>
<funcsym>
<name>_or_</name>
<arity>2</arity>
<theory>AC</theory>
</funcsym>
</signature>
</trs>
<strategy>FULL</strategy>
<metainformation>
<originalfilename>./TRS/CSR_Maude/bool/RENAMED-BOOL_complete.trs</originalfilename>
</metainformation>
</problem>
