<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="../../xml/xtcHTML.xsl"?>
<problem xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="complexity" xsi:noNamespaceSchemaLocation="../../xml/xtc.xsd">
<trs>
<rules>
<rule>
<lhs>
<funapp>
<name>head</name>
<arg>
<funapp>
<name>Cons</name>
<arg>
<var>x</var>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<var>x</var>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>factor</name>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>RPar</name>
</funapp>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<var>xs</var>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>factor</name>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>Div</name>
</funapp>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<var>xs</var>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>factor</name>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>Mul</name>
</funapp>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<var>xs</var>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>factor</name>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>Plus</name>
</funapp>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<var>xs</var>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>factor</name>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>Minus</name>
</funapp>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<var>xs</var>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>factor</name>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>Val</name>
<arg>
<var>int</var>
</arg>
</funapp>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<var>xs</var>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>factor</name>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>LPar</name>
</funapp>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>factor[Ite][True][Let]</name>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>LPar</name>
</funapp>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>expr</name>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>LPar</name>
</funapp>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>member</name>
<arg>
<var>x'</var>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<var>x</var>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>member[Ite][True][Ite]</name>
<arg>
<funapp>
<name>eqAlph</name>
<arg>
<var>x</var>
</arg>
<arg>
<var>x'</var>
</arg>
</funapp>
</arg>
<arg>
<var>x'</var>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<var>x</var>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>member</name>
<arg>
<var>x</var>
</arg>
<arg>
<funapp>
<name>Nil</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>atom</name>
<arg>
<funapp>
<name>Cons</name>
<arg>
<var>x</var>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<var>xs</var>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>atom</name>
<arg>
<funapp>
<name>Nil</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>Nil</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>RPar</name>
</funapp>
</arg>
<arg>
<funapp>
<name>RPar</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>True</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>RPar</name>
</funapp>
</arg>
<arg>
<funapp>
<name>LPar</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>RPar</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Div</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>RPar</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Mul</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>RPar</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Plus</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>RPar</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Minus</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>RPar</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Val</name>
<arg>
<var>int2</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>LPar</name>
</funapp>
</arg>
<arg>
<funapp>
<name>RPar</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>LPar</name>
</funapp>
</arg>
<arg>
<funapp>
<name>LPar</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>True</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>LPar</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Div</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>LPar</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Mul</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>LPar</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Plus</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>LPar</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Minus</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>LPar</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Val</name>
<arg>
<var>int2</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>Div</name>
</funapp>
</arg>
<arg>
<funapp>
<name>RPar</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>Div</name>
</funapp>
</arg>
<arg>
<funapp>
<name>LPar</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>Div</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Div</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>True</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>Div</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Mul</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>Div</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Plus</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>Div</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Minus</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>Div</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Val</name>
<arg>
<var>int2</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>Mul</name>
</funapp>
</arg>
<arg>
<funapp>
<name>RPar</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>Mul</name>
</funapp>
</arg>
<arg>
<funapp>
<name>LPar</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>Mul</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Div</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>Mul</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Mul</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>True</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>Mul</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Plus</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>Mul</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Minus</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>Mul</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Val</name>
<arg>
<var>int2</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>Plus</name>
</funapp>
</arg>
<arg>
<funapp>
<name>RPar</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>Plus</name>
</funapp>
</arg>
<arg>
<funapp>
<name>LPar</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>Plus</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Div</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>Plus</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Mul</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>Plus</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Plus</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>True</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>Plus</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Minus</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>Plus</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Val</name>
<arg>
<var>int2</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>Minus</name>
</funapp>
</arg>
<arg>
<funapp>
<name>RPar</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>Minus</name>
</funapp>
</arg>
<arg>
<funapp>
<name>LPar</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>Minus</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Div</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>Minus</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Mul</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>Minus</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Plus</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>Minus</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Minus</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>True</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>Minus</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Val</name>
<arg>
<var>int2</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>Val</name>
<arg>
<var>int</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>RPar</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>Val</name>
<arg>
<var>int</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>LPar</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>Val</name>
<arg>
<var>int</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>Div</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>Val</name>
<arg>
<var>int</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>Mul</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>Val</name>
<arg>
<var>int</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>Plus</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>Val</name>
<arg>
<var>int</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>Minus</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>Val</name>
<arg>
<var>int</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>Val</name>
<arg>
<var>int2</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>!EQ</name>
<arg>
<var>int2</var>
</arg>
<arg>
<var>int</var>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>notEmpty</name>
<arg>
<funapp>
<name>Cons</name>
<arg>
<var>x</var>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>True</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>notEmpty</name>
<arg>
<funapp>
<name>Nil</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>term</name>
<arg>
<var>xs</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>term[Let]</name>
<arg>
<var>xs</var>
</arg>
<arg>
<funapp>
<name>factor</name>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>parsexp</name>
<arg>
<var>xs</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>expr</name>
<arg>
<var>xs</var>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>expr</name>
<arg>
<var>xs</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>expr[Let]</name>
<arg>
<var>xs</var>
</arg>
<arg>
<funapp>
<name>term</name>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<relrules>
<rule>
<lhs>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>False</name>
</funapp>
</arg>
<arg>
<funapp>
<name>False</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>True</name>
</funapp>
</arg>
<arg>
<funapp>
<name>False</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>False</name>
</funapp>
</arg>
<arg>
<funapp>
<name>True</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>True</name>
</funapp>
</arg>
<arg>
<funapp>
<name>True</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>True</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>!EQ</name>
<arg>
<funapp>
<name>S</name>
<arg>
<var>x</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>S</name>
<arg>
<var>y</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>!EQ</name>
<arg>
<var>x</var>
</arg>
<arg>
<var>y</var>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>!EQ</name>
<arg>
<funapp>
<name>0</name>
</funapp>
</arg>
<arg>
<funapp>
<name>S</name>
<arg>
<var>y</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>!EQ</name>
<arg>
<funapp>
<name>S</name>
<arg>
<var>x</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>0</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>!EQ</name>
<arg>
<funapp>
<name>0</name>
</funapp>
</arg>
<arg>
<funapp>
<name>0</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>True</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>factor[Ite][True][Let]</name>
<arg>
<var>xs'</var>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>RPar</name>
</funapp>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>factor[Ite][True][Let][Ite]</name>
<arg>
<funapp>
<name>True</name>
</funapp>
</arg>
<arg>
<var>xs'</var>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>RPar</name>
</funapp>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>factor[Ite][True][Let]</name>
<arg>
<var>xs'</var>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>LPar</name>
</funapp>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>factor[Ite][True][Let][Ite]</name>
<arg>
<funapp>
<name>False</name>
</funapp>
</arg>
<arg>
<var>xs'</var>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>LPar</name>
</funapp>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>factor[Ite][True][Let]</name>
<arg>
<var>xs'</var>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>Div</name>
</funapp>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>factor[Ite][True][Let][Ite]</name>
<arg>
<funapp>
<name>False</name>
</funapp>
</arg>
<arg>
<var>xs'</var>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>Div</name>
</funapp>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>factor[Ite][True][Let]</name>
<arg>
<var>xs'</var>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>Mul</name>
</funapp>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>factor[Ite][True][Let][Ite]</name>
<arg>
<funapp>
<name>False</name>
</funapp>
</arg>
<arg>
<var>xs'</var>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>Mul</name>
</funapp>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>factor[Ite][True][Let]</name>
<arg>
<var>xs'</var>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>Plus</name>
</funapp>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>factor[Ite][True][Let][Ite]</name>
<arg>
<funapp>
<name>False</name>
</funapp>
</arg>
<arg>
<var>xs'</var>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>Plus</name>
</funapp>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>factor[Ite][True][Let]</name>
<arg>
<var>xs'</var>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>Minus</name>
</funapp>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>factor[Ite][True][Let][Ite]</name>
<arg>
<funapp>
<name>False</name>
</funapp>
</arg>
<arg>
<var>xs'</var>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>Minus</name>
</funapp>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>factor[Ite][True][Let]</name>
<arg>
<var>xs'</var>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>Val</name>
<arg>
<var>int</var>
</arg>
</funapp>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>factor[Ite][True][Let][Ite]</name>
<arg>
<funapp>
<name>False</name>
</funapp>
</arg>
<arg>
<var>xs'</var>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>Val</name>
<arg>
<var>int</var>
</arg>
</funapp>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>term[Let]</name>
<arg>
<var>xs'</var>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<var>x</var>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>term[Let][Ite][False][Ite]</name>
<arg>
<funapp>
<name>member</name>
<arg>
<var>x</var>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>Mul</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>Div</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Nil</name>
</funapp>
</arg>
</funapp>
</arg>
</funapp>
</arg>
</funapp>
</arg>
<arg>
<var>xs'</var>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<var>x</var>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>expr[Let]</name>
<arg>
<var>xs'</var>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<var>x</var>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>expr[Let][Ite][False][Ite]</name>
<arg>
<funapp>
<name>member</name>
<arg>
<var>x</var>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>Plus</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>Minus</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Nil</name>
</funapp>
</arg>
</funapp>
</arg>
</funapp>
</arg>
</funapp>
</arg>
<arg>
<var>xs'</var>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<var>x</var>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>term[Let]</name>
<arg>
<var>xs</var>
</arg>
<arg>
<funapp>
<name>Nil</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>Nil</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>member[Ite][True][Ite]</name>
<arg>
<funapp>
<name>False</name>
</funapp>
</arg>
<arg>
<var>x'</var>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<var>x</var>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>member</name>
<arg>
<var>x'</var>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>factor[Ite][True][Let]</name>
<arg>
<var>xs</var>
</arg>
<arg>
<funapp>
<name>Nil</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>factor[Ite][True][Let][Ite]</name>
<arg>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>False</name>
</funapp>
</arg>
<arg>
<funapp>
<name>eqAlph</name>
<arg>
<funapp>
<name>head</name>
<arg>
<funapp>
<name>Nil</name>
</funapp>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>RPar</name>
</funapp>
</arg>
</funapp>
</arg>
</funapp>
</arg>
<arg>
<var>xs</var>
</arg>
<arg>
<funapp>
<name>Nil</name>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>expr[Let]</name>
<arg>
<var>xs</var>
</arg>
<arg>
<funapp>
<name>Nil</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>Nil</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>member[Ite][True][Ite]</name>
<arg>
<funapp>
<name>True</name>
</funapp>
</arg>
<arg>
<var>x</var>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>True</name>
</funapp>
</rhs>
</rule>
</relrules>
</rules>
<signature>
<funcsym>
<name>Plus</name>
<arity>0</arity>
</funcsym>
<funcsym>
<name>LPar</name>
<arity>0</arity>
</funcsym>
<funcsym>
<name>True</name>
<arity>0</arity>
</funcsym>
<funcsym>
<name>head</name>
<arity>1</arity>
</funcsym>
<funcsym>
<name>factor</name>
<arity>1</arity>
</funcsym>
<funcsym>
<name>Minus</name>
<arity>0</arity>
</funcsym>
<funcsym>
<name>atom</name>
<arity>1</arity>
</funcsym>
<funcsym>
<name>expr</name>
<arity>1</arity>
</funcsym>
<funcsym>
<name>expr[Let]</name>
<arity>2</arity>
</funcsym>
<funcsym>
<name>Div</name>
<arity>0</arity>
</funcsym>
<funcsym>
<name>Mul</name>
<arity>0</arity>
</funcsym>
<funcsym>
<name>member</name>
<arity>2</arity>
</funcsym>
<funcsym>
<name>!EQ</name>
<arity>2</arity>
</funcsym>
<funcsym>
<name>Cons</name>
<arity>2</arity>
</funcsym>
<funcsym>
<name>term[Let][Ite][False][Ite]</name>
<arity>3</arity>
</funcsym>
<funcsym>
<name>Val</name>
<arity>1</arity>
</funcsym>
<funcsym>
<name>False</name>
<arity>0</arity>
</funcsym>
<funcsym>
<name>term</name>
<arity>1</arity>
</funcsym>
<funcsym>
<name>factor[Ite][True][Let]</name>
<arity>2</arity>
</funcsym>
<funcsym>
<name>member[Ite][True][Ite]</name>
<arity>3</arity>
</funcsym>
<funcsym>
<name>Nil</name>
<arity>0</arity>
</funcsym>
<funcsym>
<name>and</name>
<arity>2</arity>
</funcsym>
<funcsym>
<name>factor[Ite][True][Let][Ite]</name>
<arity>3</arity>
</funcsym>
<funcsym>
<name>RPar</name>
<arity>0</arity>
</funcsym>
<funcsym>
<name>S</name>
<arity>1</arity>
</funcsym>
<funcsym>
<name>term[Let]</name>
<arity>2</arity>
</funcsym>
<funcsym>
<name>expr[Let][Ite][False][Ite]</name>
<arity>3</arity>
</funcsym>
<funcsym>
<name>0</name>
<arity>0</arity>
</funcsym>
<funcsym>
<name>eqAlph</name>
<arity>2</arity>
</funcsym>
<funcsym>
<name>notEmpty</name>
<arity>1</arity>
</funcsym>
<funcsym>
<name>parsexp</name>
<arity>1</arity>
</funcsym>
</signature>
</trs>
<strategy>INNERMOST</strategy>
<startterm>
<constructor-based/>
</startterm>
</problem>
