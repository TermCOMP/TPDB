<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="../../xml/xtcHTML.xsl"?>
<problem xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="complexity" xsi:noNamespaceSchemaLocation="../../xml/xtc.xsd">
<trs>
<rules>
<rule>
<lhs>
<funapp>
<name>colorof</name>
<arg>
<var>node</var>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>CN</name>
<arg>
<var>cl</var>
</arg>
<arg>
<funapp>
<name>N</name>
<arg>
<var>name</var>
</arg>
<arg>
<var>adjs</var>
</arg>
</funapp>
</arg>
</funapp>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>colorof[Ite][True][Ite]</name>
<arg>
<funapp>
<name>!EQ</name>
<arg>
<var>name</var>
</arg>
<arg>
<var>node</var>
</arg>
</funapp>
</arg>
<arg>
<var>node</var>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>CN</name>
<arg>
<var>cl</var>
</arg>
<arg>
<funapp>
<name>N</name>
<arg>
<var>name</var>
</arg>
<arg>
<var>adjs</var>
</arg>
</funapp>
</arg>
</funapp>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqColorList</name>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>Yellow</name>
</funapp>
</arg>
<arg>
<var>cs1</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>NoColor</name>
</funapp>
</arg>
<arg>
<var>cs2</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>False</name>
</funapp>
</arg>
<arg>
<funapp>
<name>eqColorList</name>
<arg>
<var>cs1</var>
</arg>
<arg>
<var>cs2</var>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqColorList</name>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>Yellow</name>
</funapp>
</arg>
<arg>
<var>cs1</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>Yellow</name>
</funapp>
</arg>
<arg>
<var>cs2</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>True</name>
</funapp>
</arg>
<arg>
<funapp>
<name>eqColorList</name>
<arg>
<var>cs1</var>
</arg>
<arg>
<var>cs2</var>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqColorList</name>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>Yellow</name>
</funapp>
</arg>
<arg>
<var>cs1</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>Blue</name>
</funapp>
</arg>
<arg>
<var>cs2</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>False</name>
</funapp>
</arg>
<arg>
<funapp>
<name>eqColorList</name>
<arg>
<var>cs1</var>
</arg>
<arg>
<var>cs2</var>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqColorList</name>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>Yellow</name>
</funapp>
</arg>
<arg>
<var>cs1</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>Red</name>
</funapp>
</arg>
<arg>
<var>cs2</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>False</name>
</funapp>
</arg>
<arg>
<funapp>
<name>eqColorList</name>
<arg>
<var>cs1</var>
</arg>
<arg>
<var>cs2</var>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqColorList</name>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>Blue</name>
</funapp>
</arg>
<arg>
<var>cs1</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>NoColor</name>
</funapp>
</arg>
<arg>
<var>cs2</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>False</name>
</funapp>
</arg>
<arg>
<funapp>
<name>eqColorList</name>
<arg>
<var>cs1</var>
</arg>
<arg>
<var>cs2</var>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqColorList</name>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>Blue</name>
</funapp>
</arg>
<arg>
<var>cs1</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>Yellow</name>
</funapp>
</arg>
<arg>
<var>cs2</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>False</name>
</funapp>
</arg>
<arg>
<funapp>
<name>eqColorList</name>
<arg>
<var>cs1</var>
</arg>
<arg>
<var>cs2</var>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqColorList</name>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>Blue</name>
</funapp>
</arg>
<arg>
<var>cs1</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>Blue</name>
</funapp>
</arg>
<arg>
<var>cs2</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>True</name>
</funapp>
</arg>
<arg>
<funapp>
<name>eqColorList</name>
<arg>
<var>cs1</var>
</arg>
<arg>
<var>cs2</var>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqColorList</name>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>Blue</name>
</funapp>
</arg>
<arg>
<var>cs1</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>Red</name>
</funapp>
</arg>
<arg>
<var>cs2</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>False</name>
</funapp>
</arg>
<arg>
<funapp>
<name>eqColorList</name>
<arg>
<var>cs1</var>
</arg>
<arg>
<var>cs2</var>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqColorList</name>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>Red</name>
</funapp>
</arg>
<arg>
<var>cs1</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>NoColor</name>
</funapp>
</arg>
<arg>
<var>cs2</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>False</name>
</funapp>
</arg>
<arg>
<funapp>
<name>eqColorList</name>
<arg>
<var>cs1</var>
</arg>
<arg>
<var>cs2</var>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqColorList</name>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>Red</name>
</funapp>
</arg>
<arg>
<var>cs1</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>Yellow</name>
</funapp>
</arg>
<arg>
<var>cs2</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>False</name>
</funapp>
</arg>
<arg>
<funapp>
<name>eqColorList</name>
<arg>
<var>cs1</var>
</arg>
<arg>
<var>cs2</var>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqColorList</name>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>Red</name>
</funapp>
</arg>
<arg>
<var>cs1</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>Blue</name>
</funapp>
</arg>
<arg>
<var>cs2</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>False</name>
</funapp>
</arg>
<arg>
<funapp>
<name>eqColorList</name>
<arg>
<var>cs1</var>
</arg>
<arg>
<var>cs2</var>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqColorList</name>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>Red</name>
</funapp>
</arg>
<arg>
<var>cs1</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>Red</name>
</funapp>
</arg>
<arg>
<var>cs2</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>True</name>
</funapp>
</arg>
<arg>
<funapp>
<name>eqColorList</name>
<arg>
<var>cs1</var>
</arg>
<arg>
<var>cs2</var>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqColorList</name>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>NoColor</name>
</funapp>
</arg>
<arg>
<var>cs1</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<var>b</var>
</arg>
<arg>
<var>cs2</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>False</name>
</funapp>
</arg>
<arg>
<funapp>
<name>eqColorList</name>
<arg>
<var>cs1</var>
</arg>
<arg>
<var>cs2</var>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>revapp</name>
<arg>
<funapp>
<name>Cons</name>
<arg>
<var>x</var>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
<arg>
<var>rest</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>revapp</name>
<arg>
<var>xs</var>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<var>x</var>
</arg>
<arg>
<var>rest</var>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>revapp</name>
<arg>
<funapp>
<name>Nil</name>
</funapp>
</arg>
<arg>
<var>rest</var>
</arg>
</funapp>
</lhs>
<rhs>
<var>rest</var>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>possible</name>
<arg>
<var>color</var>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<var>x</var>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
<arg>
<var>colorednodes</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>possible[Ite][True][Ite]</name>
<arg>
<funapp>
<name>eqColor</name>
<arg>
<var>color</var>
</arg>
<arg>
<funapp>
<name>colorof</name>
<arg>
<var>x</var>
</arg>
<arg>
<var>colorednodes</var>
</arg>
</funapp>
</arg>
</funapp>
</arg>
<arg>
<var>color</var>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<var>x</var>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
<arg>
<var>colorednodes</var>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>possible</name>
<arg>
<var>color</var>
</arg>
<arg>
<funapp>
<name>Nil</name>
</funapp>
</arg>
<arg>
<var>colorednodes</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>True</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>colorrest</name>
<arg>
<var>cs</var>
</arg>
<arg>
<var>ncs</var>
</arg>
<arg>
<var>colorednodes</var>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<var>x</var>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>colorednoderest</name>
<arg>
<var>cs</var>
</arg>
<arg>
<var>ncs</var>
</arg>
<arg>
<var>x</var>
</arg>
<arg>
<var>colorednodes</var>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<var>x</var>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>colorrest</name>
<arg>
<var>cs</var>
</arg>
<arg>
<var>ncs</var>
</arg>
<arg>
<var>colorednodes</var>
</arg>
<arg>
<funapp>
<name>Nil</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<var>colorednodes</var>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>colorof</name>
<arg>
<var>node</var>
</arg>
<arg>
<funapp>
<name>Nil</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>NoColor</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>colornode</name>
<arg>
<funapp>
<name>Cons</name>
<arg>
<var>x</var>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>N</name>
<arg>
<var>n</var>
</arg>
<arg>
<var>ns</var>
</arg>
</funapp>
</arg>
<arg>
<var>colorednodes</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>colornode[Ite][True][Ite]</name>
<arg>
<funapp>
<name>possible</name>
<arg>
<var>x</var>
</arg>
<arg>
<var>ns</var>
</arg>
<arg>
<var>colorednodes</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<var>x</var>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>N</name>
<arg>
<var>n</var>
</arg>
<arg>
<var>ns</var>
</arg>
</funapp>
</arg>
<arg>
<var>colorednodes</var>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>colornode</name>
<arg>
<funapp>
<name>Nil</name>
</funapp>
</arg>
<arg>
<var>node</var>
</arg>
<arg>
<var>colorednodes</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>NotPossible</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>colorednoderest</name>
<arg>
<var>cs</var>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<var>x</var>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>N</name>
<arg>
<var>n</var>
</arg>
<arg>
<var>ns</var>
</arg>
</funapp>
</arg>
<arg>
<var>colorednodes</var>
</arg>
<arg>
<var>rest</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>colorednoderest[Ite][True][Ite]</name>
<arg>
<funapp>
<name>possible</name>
<arg>
<var>x</var>
</arg>
<arg>
<var>ns</var>
</arg>
<arg>
<var>colorednodes</var>
</arg>
</funapp>
</arg>
<arg>
<var>cs</var>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<var>x</var>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>N</name>
<arg>
<var>n</var>
</arg>
<arg>
<var>ns</var>
</arg>
</funapp>
</arg>
<arg>
<var>colorednodes</var>
</arg>
<arg>
<var>rest</var>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>colorednoderest</name>
<arg>
<var>cs</var>
</arg>
<arg>
<funapp>
<name>Nil</name>
</funapp>
</arg>
<arg>
<var>node</var>
</arg>
<arg>
<var>colorednodes</var>
</arg>
<arg>
<var>rest</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>Nil</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>graphcolour</name>
<arg>
<funapp>
<name>Cons</name>
<arg>
<var>x</var>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
<arg>
<var>cs</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>reverse</name>
<arg>
<funapp>
<name>colorrest</name>
<arg>
<var>cs</var>
</arg>
<arg>
<var>cs</var>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>colornode</name>
<arg>
<var>cs</var>
</arg>
<arg>
<var>x</var>
</arg>
<arg>
<funapp>
<name>Nil</name>
</funapp>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>Nil</name>
</funapp>
</arg>
</funapp>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqColorList</name>
<arg>
<funapp>
<name>Cons</name>
<arg>
<var>c1</var>
</arg>
<arg>
<var>cs1</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>Nil</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqColorList</name>
<arg>
<funapp>
<name>Nil</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<var>c2</var>
</arg>
<arg>
<var>cs2</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqColorList</name>
<arg>
<funapp>
<name>Nil</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Nil</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>True</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqColor</name>
<arg>
<funapp>
<name>Yellow</name>
</funapp>
</arg>
<arg>
<funapp>
<name>NoColor</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqColor</name>
<arg>
<funapp>
<name>Yellow</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Yellow</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>True</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqColor</name>
<arg>
<funapp>
<name>Yellow</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Blue</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqColor</name>
<arg>
<funapp>
<name>Yellow</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Red</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqColor</name>
<arg>
<funapp>
<name>Blue</name>
</funapp>
</arg>
<arg>
<funapp>
<name>NoColor</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqColor</name>
<arg>
<funapp>
<name>Blue</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Yellow</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqColor</name>
<arg>
<funapp>
<name>Blue</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Blue</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>True</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqColor</name>
<arg>
<funapp>
<name>Blue</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Red</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqColor</name>
<arg>
<funapp>
<name>Red</name>
</funapp>
</arg>
<arg>
<funapp>
<name>NoColor</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqColor</name>
<arg>
<funapp>
<name>Red</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Yellow</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqColor</name>
<arg>
<funapp>
<name>Red</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Blue</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqColor</name>
<arg>
<funapp>
<name>Red</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Red</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>True</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>notEmpty</name>
<arg>
<funapp>
<name>Cons</name>
<arg>
<var>x</var>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>True</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>notEmpty</name>
<arg>
<funapp>
<name>Nil</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>getNodeName</name>
<arg>
<funapp>
<name>N</name>
<arg>
<var>name</var>
</arg>
<arg>
<var>adjs</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<var>name</var>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>getNodeFromCN</name>
<arg>
<funapp>
<name>CN</name>
<arg>
<var>cl</var>
</arg>
<arg>
<var>n</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<var>n</var>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>getColorListFromCN</name>
<arg>
<funapp>
<name>CN</name>
<arg>
<var>cl</var>
</arg>
<arg>
<var>n</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<var>cl</var>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>getAdjs</name>
<arg>
<funapp>
<name>N</name>
<arg>
<var>n</var>
</arg>
<arg>
<var>ns</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<var>ns</var>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>eqColor</name>
<arg>
<funapp>
<name>NoColor</name>
</funapp>
</arg>
<arg>
<var>b</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>reverse</name>
<arg>
<var>xs</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>revapp</name>
<arg>
<var>xs</var>
</arg>
<arg>
<funapp>
<name>Nil</name>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>colorrestthetrick</name>
<arg>
<var>cs1</var>
</arg>
<arg>
<var>cs</var>
</arg>
<arg>
<var>ncs</var>
</arg>
<arg>
<var>colorednodes</var>
</arg>
<arg>
<var>rest</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>colorrestthetrick[Ite]</name>
<arg>
<funapp>
<name>eqColorList</name>
<arg>
<var>cs1</var>
</arg>
<arg>
<var>ncs</var>
</arg>
</funapp>
</arg>
<arg>
<var>cs1</var>
</arg>
<arg>
<var>cs</var>
</arg>
<arg>
<var>ncs</var>
</arg>
<arg>
<var>colorednodes</var>
</arg>
<arg>
<var>rest</var>
</arg>
</funapp>
</rhs>
</rule>
<relrules>
<rule>
<lhs>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>False</name>
</funapp>
</arg>
<arg>
<funapp>
<name>False</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>True</name>
</funapp>
</arg>
<arg>
<funapp>
<name>False</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>False</name>
</funapp>
</arg>
<arg>
<funapp>
<name>True</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>and</name>
<arg>
<funapp>
<name>True</name>
</funapp>
</arg>
<arg>
<funapp>
<name>True</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>True</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>!EQ</name>
<arg>
<funapp>
<name>S</name>
<arg>
<var>x</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>S</name>
<arg>
<var>y</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>!EQ</name>
<arg>
<var>x</var>
</arg>
<arg>
<var>y</var>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>!EQ</name>
<arg>
<funapp>
<name>0</name>
</funapp>
</arg>
<arg>
<funapp>
<name>S</name>
<arg>
<var>y</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>!EQ</name>
<arg>
<funapp>
<name>S</name>
<arg>
<var>x</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>0</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>!EQ</name>
<arg>
<funapp>
<name>0</name>
</funapp>
</arg>
<arg>
<funapp>
<name>0</name>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>True</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>colorof[Ite][True][Ite]</name>
<arg>
<funapp>
<name>True</name>
</funapp>
</arg>
<arg>
<var>node</var>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>CN</name>
<arg>
<funapp>
<name>Cons</name>
<arg>
<var>x</var>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
<arg>
<var>n</var>
</arg>
</funapp>
</arg>
<arg>
<var>xs'</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<var>x</var>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>possible[Ite][True][Ite]</name>
<arg>
<funapp>
<name>False</name>
</funapp>
</arg>
<arg>
<var>color</var>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<var>x</var>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
<arg>
<var>colorednodes</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>possible</name>
<arg>
<var>color</var>
</arg>
<arg>
<var>xs</var>
</arg>
<arg>
<var>colorednodes</var>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>colorrestthetrick[Ite]</name>
<arg>
<funapp>
<name>False</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<var>x</var>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
<arg>
<var>cs</var>
</arg>
<arg>
<var>ncs</var>
</arg>
<arg>
<var>colorednodes</var>
</arg>
<arg>
<var>rest</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>colorrestthetrick</name>
<arg>
<var>xs</var>
</arg>
<arg>
<var>cs</var>
</arg>
<arg>
<var>ncs</var>
</arg>
<arg>
<var>colorednodes</var>
</arg>
<arg>
<var>rest</var>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>colorof[Ite][True][Ite]</name>
<arg>
<funapp>
<name>False</name>
</funapp>
</arg>
<arg>
<var>node</var>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<var>x</var>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>colorof</name>
<arg>
<var>node</var>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>colornode[Ite][True][Ite]</name>
<arg>
<funapp>
<name>False</name>
</funapp>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<var>x</var>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
<arg>
<var>node</var>
</arg>
<arg>
<var>colorednodes</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>colornode</name>
<arg>
<var>xs</var>
</arg>
<arg>
<var>node</var>
</arg>
<arg>
<var>colorednodes</var>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>colorednoderest[Ite][True][Ite]</name>
<arg>
<funapp>
<name>False</name>
</funapp>
</arg>
<arg>
<var>cs</var>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<var>x</var>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
<arg>
<var>node</var>
</arg>
<arg>
<var>colorednodes</var>
</arg>
<arg>
<var>rest</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>colorednoderest</name>
<arg>
<var>cs</var>
</arg>
<arg>
<var>xs</var>
</arg>
<arg>
<var>node</var>
</arg>
<arg>
<var>colorednodes</var>
</arg>
<arg>
<var>rest</var>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>colorednoderest[Ite][True][Ite]</name>
<arg>
<funapp>
<name>True</name>
</funapp>
</arg>
<arg>
<var>cs</var>
</arg>
<arg>
<var>ncs</var>
</arg>
<arg>
<var>node</var>
</arg>
<arg>
<var>colorednodes</var>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<var>x</var>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>colorednoderest[Ite][True][Ite][True][Let]</name>
<arg>
<var>cs</var>
</arg>
<arg>
<var>ncs</var>
</arg>
<arg>
<var>node</var>
</arg>
<arg>
<var>colorednodes</var>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<var>x</var>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
<arg>
<funapp>
<name>colorrest</name>
<arg>
<var>cs</var>
</arg>
<arg>
<var>cs</var>
</arg>
<arg>
<funapp>
<name>Cons</name>
<arg>
<funapp>
<name>CN</name>
<arg>
<var>ncs</var>
</arg>
<arg>
<var>node</var>
</arg>
</funapp>
</arg>
<arg>
<var>colorednodes</var>
</arg>
</funapp>
</arg>
<arg>
<var>xs</var>
</arg>
</funapp>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>possible[Ite][True][Ite]</name>
<arg>
<funapp>
<name>True</name>
</funapp>
</arg>
<arg>
<var>color</var>
</arg>
<arg>
<var>adjs</var>
</arg>
<arg>
<var>colorednodes</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>False</name>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>colorrestthetrick[Ite]</name>
<arg>
<funapp>
<name>True</name>
</funapp>
</arg>
<arg>
<var>cs1</var>
</arg>
<arg>
<var>cs</var>
</arg>
<arg>
<var>ncs</var>
</arg>
<arg>
<var>colorednodes</var>
</arg>
<arg>
<var>rest</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>colorrest</name>
<arg>
<var>cs</var>
</arg>
<arg>
<var>ncs</var>
</arg>
<arg>
<var>colorednodes</var>
</arg>
<arg>
<var>rest</var>
</arg>
</funapp>
</rhs>
</rule>
<rule>
<lhs>
<funapp>
<name>colornode[Ite][True][Ite]</name>
<arg>
<funapp>
<name>True</name>
</funapp>
</arg>
<arg>
<var>cs</var>
</arg>
<arg>
<var>node</var>
</arg>
<arg>
<var>colorednodes</var>
</arg>
</funapp>
</lhs>
<rhs>
<funapp>
<name>CN</name>
<arg>
<var>cs</var>
</arg>
<arg>
<var>node</var>
</arg>
</funapp>
</rhs>
</rule>
</relrules>
</rules>
<signature>
<funcsym>
<name>colorrest</name>
<arity>4</arity>
</funcsym>
<funcsym>
<name>getNodeName</name>
<arity>1</arity>
</funcsym>
<funcsym>
<name>True</name>
<arity>0</arity>
</funcsym>
<funcsym>
<name>getAdjs</name>
<arity>1</arity>
</funcsym>
<funcsym>
<name>NoColor</name>
<arity>0</arity>
</funcsym>
<funcsym>
<name>possible</name>
<arity>3</arity>
</funcsym>
<funcsym>
<name>eqColor</name>
<arity>2</arity>
</funcsym>
<funcsym>
<name>colorednoderest</name>
<arity>5</arity>
</funcsym>
<funcsym>
<name>colornode[Ite][True][Ite]</name>
<arity>4</arity>
</funcsym>
<funcsym>
<name>CN</name>
<arity>2</arity>
</funcsym>
<funcsym>
<name>!EQ</name>
<arity>2</arity>
</funcsym>
<funcsym>
<name>reverse</name>
<arity>1</arity>
</funcsym>
<funcsym>
<name>Blue</name>
<arity>0</arity>
</funcsym>
<funcsym>
<name>Cons</name>
<arity>2</arity>
</funcsym>
<funcsym>
<name>colornode</name>
<arity>3</arity>
</funcsym>
<funcsym>
<name>NotPossible</name>
<arity>0</arity>
</funcsym>
<funcsym>
<name>eqColorList</name>
<arity>2</arity>
</funcsym>
<funcsym>
<name>graphcolour</name>
<arity>2</arity>
</funcsym>
<funcsym>
<name>possible[Ite][True][Ite]</name>
<arity>4</arity>
</funcsym>
<funcsym>
<name>getNodeFromCN</name>
<arity>1</arity>
</funcsym>
<funcsym>
<name>False</name>
<arity>0</arity>
</funcsym>
<funcsym>
<name>Red</name>
<arity>0</arity>
</funcsym>
<funcsym>
<name>colorrestthetrick</name>
<arity>5</arity>
</funcsym>
<funcsym>
<name>colorof</name>
<arity>2</arity>
</funcsym>
<funcsym>
<name>N</name>
<arity>2</arity>
</funcsym>
<funcsym>
<name>Nil</name>
<arity>0</arity>
</funcsym>
<funcsym>
<name>colorof[Ite][True][Ite]</name>
<arity>3</arity>
</funcsym>
<funcsym>
<name>and</name>
<arity>2</arity>
</funcsym>
<funcsym>
<name>colorrestthetrick[Ite]</name>
<arity>6</arity>
</funcsym>
<funcsym>
<name>Yellow</name>
<arity>0</arity>
</funcsym>
<funcsym>
<name>colorednoderest[Ite][True][Ite][True][Let]</name>
<arity>6</arity>
</funcsym>
<funcsym>
<name>getColorListFromCN</name>
<arity>1</arity>
</funcsym>
<funcsym>
<name>S</name>
<arity>1</arity>
</funcsym>
<funcsym>
<name>0</name>
<arity>0</arity>
</funcsym>
<funcsym>
<name>notEmpty</name>
<arity>1</arity>
</funcsym>
<funcsym>
<name>revapp</name>
<arity>2</arity>
</funcsym>
<funcsym>
<name>colorednoderest[Ite][True][Ite]</name>
<arity>6</arity>
</funcsym>
</signature>
</trs>
<strategy>INNERMOST</strategy>
<startterm>
<constructor-based/>
</startterm>
</problem>
